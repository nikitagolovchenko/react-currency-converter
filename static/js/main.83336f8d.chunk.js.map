{"version":3,"sources":["components/FormResult.tsx","services/api.ts","store/currencySlice.ts","store/hooks.ts","components/Header.tsx","components/Layout.tsx","pages/HomePage.tsx","components/CurrenciesList.tsx","components/BaseSelect.tsx","pages/СurrenciesPage.tsx","App.tsx","store/store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","marginBottom","spacing","field","flexGrow","btn","marginLeft","FormResult","submit","classes","useState","value","setValue","disabled","setDisabled","className","noValidate","autoComplete","onSubmit","e","preventDefault","currVal","trim","split","toUpperCase","to","from","result","TextField","id","variant","placeholder","onChange","target","length","Button","type","color","size","fetchCountries","a","axios","get","process","data","fetchCurrency","fetchCurrencies","request","currencies","map","item","base","join","getCountries","createAsyncThunk","response","results","getCurrency","getCurrencies","currencySlice","createSlice","name","initialState","countries","loading","baseCurrency","currency","selectedCurrencies","reducers","setBaseCurrency","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectCurrency","useAppDispatch","useDispatch","useAppSelector","useSelector","logo","marginRight","Header","location","useLocation","AppBar","position","Toolbar","Typography","pathname","component","NavLink","Layout","children","Box","width","overflow","CssBaseline","zIndex","top","left","LinearProgress","pt","Container","maxWidth","HomePage","dispatch","isNaN","CurrenciesList","List","res","key","arrId","push","renderCurrencies","el","index","ListItem","button","ListItemText","primary","createStyles","formControl","selectEmpty","marginTop","BaseSelect","changeBaseCur","React","currencyId","inputValue","setInputValue","useEffect","justifyContent","mb","Autocomplete","options","arr","obj","active","renderOptions","getOptionLabel","option","style","event","newValue","onInputChange","newInputValue","renderInput","params","label","СurrenciesPage","curr","App","path","exact","persistConfig","version","storage","rootReducer","combineReducers","currencyReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83336f8d.chunk.js","sourcesContent":["import { Button, makeStyles, TextField, Theme } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\n\r\ninterface FormResultProps {\r\n  submit: (value: IRequestCurrency) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  field: {\r\n    flexGrow: 1\r\n  },\r\n  btn: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nconst FormResult: React.FC<FormResultProps> = ({submit}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState<string>('');\r\n  const [disabled, setDisabled] = useState<boolean>(true);\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    const currVal: string[] = value.trim().split(' ');\r\n\r\n    submit({\r\n      value: currVal[0].toUpperCase(),\r\n      to: currVal[3].toUpperCase(),\r\n      from: currVal[1].toUpperCase(),\r\n      result: null\r\n    });\r\n\r\n    setValue('');\r\n  }\r\n\r\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setValue(e.target.value);\r\n    if (value.split(' ').length === 4) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete='off' onSubmit={submitHandler}>\r\n      <TextField className={classes.field} id='outlined-basic' variant='outlined' placeholder=\"15 usd in uah\" value={value} onChange={changeHandler} />\r\n      <Button className={classes.btn} type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" disabled={disabled}>Get result</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormResult;\r\n","import axios from \"axios\"\r\n\r\nexport const fetchCountries = async () => {\r\n  const data = await axios.get(`${process.env.REACT_APP_API_URL}countries?apiKey=${process.env.REACT_APP_API_KEY}`);\r\n  return data;\r\n}\r\n\r\nexport const fetchCurrency = async (value: IRequestCurrency) => {\r\n  const data = await axios.get(`${process.env.REACT_APP_API_URL}convert?q=${value.from}_${value.to}&compact=ultra&apiKey=${process.env.REACT_APP_API_KEY}`);\r\n  return data;\r\n}\r\n\r\nexport const fetchCurrencies = async (value: Icurrencies) => {\r\n  const request: string = value.currencies.map(item => `${item}_${value.base}`).join(',').trim();\r\n  \r\n  const data = await axios.get(`${process.env.REACT_APP_API_URL}convert?q=${request}&compact=ultra&apiKey=${process.env.REACT_APP_API_KEY}`);\r\n  return data;\r\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { fetchCountries, fetchCurrency } from '../services/api';\nimport { RootState, AppThunk } from './store';\nimport { fetchCurrencies } from './../services/api';\n\nexport interface CurrencyState {\n  countries: ICountries;\n  loading: boolean;\n  baseCurrency: {\n    id: string;\n  };\n  currency: IRequestCurrency;\n  currencies: string[];\n  selectedCurrencies: string[];\n}\n\nconst initialState: CurrencyState = {\n  countries: {},\n  loading: false,\n  baseCurrency: {\n    id: 'UAH'\n  },\n  currency: {\n    value: '',\n    to: '',\n    from: '',\n    result: null\n  },\n  currencies: [],\n  selectedCurrencies: ['USD', 'EUR'],\n};\n\nexport const getCountries = createAsyncThunk(\n  'currency/getCountries',\n  async () => {\n    const response = await fetchCountries();\n    return response.data.results;\n  }\n);\n\nexport const getCurrency = createAsyncThunk(\n  'currency/getCurrency',\n  async (value: IRequestCurrency) => {\n    const response = await fetchCurrency(value);\n\n    return {\n      value: value.value,\n      result: +value.value * response.data[`${value.from}_${value.to}`],\n      from: value.from,\n      to: value.to\n    };\n  }\n);\n\nexport const getCurrencies = createAsyncThunk(\n  'currency/getCurrencies',\n  async (value: Icurrencies) => {\n    const response = await fetchCurrencies(value);\n\n    return response.data;\n  }\n);\n\nexport const currencySlice = createSlice({\n  name: 'currency',\n  initialState,\n\n  reducers: {\n    setBaseCurrency: (state, action) => {\n      state.baseCurrency.id = action.payload;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(getCountries.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getCountries.fulfilled, (state, action) => {\n        state.loading = false;\n        state.countries = action.payload;\n      })\n      .addCase(getCountries.rejected, (state) => {\n        state.loading = false;\n      })\n      .addCase(getCurrency.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getCurrency.fulfilled, (state, action) => {\n        state.loading = false;\n        state.currency = action.payload;\n      })\n      .addCase(getCurrency.rejected, (state) => {\n        state.loading = false;\n      })\n      .addCase(getCurrencies.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getCurrencies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.currencies = action.payload;\n      })\n      .addCase(getCurrencies.rejected, (state) => {\n        state.loading = false;\n      })\n  },\n});\n\nexport const {setBaseCurrency} = currencySlice.actions;\n\n\nexport const selectCurrency = (state: RootState) => state.currency;\n\nexport default currencySlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { AppBar, Button, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  logo: {\r\n    marginRight: 'auto'\r\n  }\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h6' className={classes.logo}>\r\n          Rect currency converter app\r\n        </Typography>\r\n        {location.pathname === '/currencies' && <Button component={NavLink} to=\"/\" color='inherit'>Back home</Button>}\r\n        {location.pathname === '/' &&  <Button component={NavLink} to=\"/currencies\" color='inherit'>Currencies list</Button>}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Box, Container, CssBaseline, LinearProgress } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { selectCurrency } from '../store/currencySlice';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport Header from './Header';\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  const currency = useAppSelector(selectCurrency);\r\n\r\n  return (\r\n    <Box position='relative' width='100%' overflow='hidden'>\r\n      <CssBaseline />\r\n      {currency.loading && (\r\n        <Box position='absolute' zIndex='100' top='0' left='0' width='100%'>\r\n          <LinearProgress color='secondary' />\r\n        </Box>\r\n      )}\r\n\r\n      <Header />\r\n      <Box component='main' pt={3}>\r\n        <Container maxWidth='md'>\r\n          <>{children}</>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport FormResult from '../components/FormResult';\r\nimport Layout from '../components/Layout';\r\nimport { getCurrency, selectCurrency } from '../store/currencySlice';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\n\r\nconst HomePage: React.FC = () => {\r\n  const currency = useAppSelector(selectCurrency);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const searchHandler = (value: IRequestCurrency) => {\r\n    dispatch(getCurrency(value));\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <FormResult submit={searchHandler} />\r\n      {!currency.currency.result && <Typography>...</Typography>}\r\n      {!isNaN(currency.currency.result as number) && currency.currency.result && (\r\n        <Typography>\r\n          {currency.currency.value} {currency.currency.from} ={' '}\r\n          {currency.currency.result} {currency.currency.to}\r\n        </Typography>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport { Box, List, ListItem, ListItemText, makeStyles, Theme } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n\r\n  }\r\n}))\r\n\r\nconst CurrenciesList: React.FC<any> = ({currencies}) => {\r\n  const classes = useStyles();\r\n\r\n  const renderCurrencies = (): string[] => {\r\n    let res: string[] = [];\r\n\r\n    for (let key in currencies) {\r\n      const arrId: string[] = key.split('_');\r\n      res.push(`1 ${arrId[0]} = ${currencies[key]} ${arrId[1]}`);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <List >\r\n          {renderCurrencies().map((el, index) => (\r\n            <ListItem button key={index}>\r\n              <ListItemText primary={el}/>\r\n            </ListItem>\r\n          ))}  \r\n      </List>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CurrenciesList\r\n","import React, { useEffect } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Box } from '@material-ui/core';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport { selectCurrency } from '../store/currencySlice';\r\n\r\ninterface BaseSelectProps {\r\n  changeBaseCur: (curr: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      marginBottom: theme.spacing(2),\r\n      width: 130,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst BaseSelect: React.FC<BaseSelectProps> = ({ changeBaseCur }) => {\r\n  const classes = useStyles();\r\n  const currency = useAppSelector(selectCurrency);\r\n  const [value, setValue] = React.useState<any | null>({\r\n    currencyId: currency.baseCurrency.id\r\n  });\r\n  const [inputValue, setInputValue] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      changeBaseCur(value.currencyId);\r\n    }\r\n  }, [value]);\r\n\r\n\r\n  const renderOptions = () => {\r\n    let arr: any[] = [];\r\n    let obj: any = currency.countries as any;\r\n\r\n    for (let key in obj) {\r\n      arr.push({ ...obj[key], active: false });\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  return (\r\n    <Box display='flex' justifyContent='flex-end' mb={2}>\r\n      <Autocomplete\r\n        id='select-currency'\r\n        options={renderOptions()}\r\n        getOptionLabel={(option: any) => option.currencyId}\r\n        style={{ width: 300 }}\r\n        value={value}\r\n        onChange={(event: any, newValue: string | null) => {\r\n          setValue(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        renderInput={(params: any) => (\r\n          <TextField {...params} label='box' variant='outlined' />\r\n        )}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BaseSelect;\r\n","import React, { useEffect } from 'react'\r\nimport CurrenciesList from '../components/CurrenciesList';\r\nimport Layout from '../components/Layout'\r\nimport { getCurrencies, selectCurrency, setBaseCurrency } from '../store/currencySlice';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport BaseSelect from './../components/BaseSelect';\r\n\r\nconst СurrenciesPage: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const currency = useAppSelector(selectCurrency);\r\n\r\n  useEffect(() => {\r\n    const request: Icurrencies = {\r\n      base: currency.baseCurrency.id,\r\n      currencies: currency.selectedCurrencies\r\n    }\r\n\r\n    dispatch(getCurrencies(request));\r\n  }, [dispatch, currency.baseCurrency.id]);\r\n\r\n  const changeCurrency = (curr: string): void => {\r\n    dispatch(setBaseCurrency(curr));\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <BaseSelect changeBaseCur={changeCurrency}/>\r\n      <CurrenciesList currencies={currency.currencies}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default СurrenciesPage;\r\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport СurrenciesPage from './pages/СurrenciesPage';\nimport { useAppDispatch, useAppSelector } from './store/hooks';\nimport { getCountries, selectCurrency } from './store/currencySlice';\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currency = useAppSelector(selectCurrency);\n\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [])\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path='/' component={HomePage} exact />\n          <Route path='/currencies' component={СurrenciesPage} exact />\n          <Redirect to='/' />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport currencyReducer from './currencySlice';\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  currency: currencyReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport let persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store/store';\nimport { persistor } from './store/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}